<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.lovver.atoms</groupId>
    <artifactId>atoms-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>atoms</artifactId>
  <build>
  	<plugins>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
                    <execution>
                        <id>attach-javadoc</id>
						<phase>deploy</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
				<configuration>
					<show>public</show>
					<charset>UTF-8</charset>
					<encoding>UTF-8</encoding>
					<docencoding>UTF-8</docencoding>
					<excludePackageNames>com.alibaba.com.*</excludePackageNames>
					<links>
						<link>http://docs.oracle.com/javase/6/docs/api</link>
					</links>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<createSourcesJar>true</createSourcesJar>
							<promoteTransitiveDependencies>true</promoteTransitiveDependencies>
							<artifactSet>
								<includes>
									<include>com.lovver.atoms:atoms-common</include>
								    <include>com.lovver.atoms:atoms-config</include>
									<include>com.lovver.atoms:atoms-broadcast-api</include>
									<include>com.lovver.atoms:atoms-broadcast-redis</include>
									<include>com.lovver.atoms:atoms-serializer-api</include>
									<include>com.lovver.atoms:atoms-serializer-fst</include>
									<include>com.lovver.atoms:atoms-serializer-java</include>
									<include>com.lovver.atoms:atoms-serializer-kryo</include>
									<include>com.lovver.atoms:atoms-serializer-kryopool</include>
									<include>com.lovver.atoms:atoms-cache-api</include>
									<include>com.lovver.atoms:atoms-cache-redis</include>
									<include>com.lovver.atoms:atoms-cache-encache</include>
									<include>com.lovver.atoms:atoms-core</include>
									<include>com.lovver.atoms:atoms-context</include>
									<!-- 
									<include>com.lovver.atoms:dubbo-rpc-api</include>
									<include>com.lovver.atoms:dubbo-rpc-default</include>
									<include>com.lovver.atoms:dubbo-rpc-injvm</include>
									<include>com.lovver.atoms:dubbo-rpc-rmi</include>
									<include>com.lovver.atoms:dubbo-rpc-hessian</include>
									<include>com.lovver.atoms:dubbo-rpc-http</include>
									<include>com.lovver.atoms:dubbo-rpc-webservice</include>
									<include>com.lovver.atoms:dubbo-rpc-thrift</include>
									<include>com.lovver.atoms:dubbo-rpc-memcached</include>
									<include>com.lovver.atoms:dubbo-rpc-redis</include>
									<include>com.lovver.atoms:dubbo-filter-validation</include>
									<include>com.lovver.atoms:dubbo-filter-cache</include>
									<include>com.lovver.atoms:dubbo-cluster</include>
									<include>com.lovver.atoms:dubbo-registry-api</include>
									<include>com.lovver.atoms:dubbo-registry-default</include>
									<include>com.lovver.atoms:dubbo-registry-multicast</include>
									<include>com.lovver.atoms:dubbo-registry-zookeeper</include>
									<include>com.lovver.atoms:dubbo-registry-redis</include>
									<include>com.lovver.atoms:dubbo-monitor-api</include>
									<include>com.lovver.atoms:dubbo-monitor-default</include>
									<include>com.lovver.atoms:dubbo-config-api</include>
									<include>com.lovver.atoms:dubbo-config-spring</include>
									<include>com.lovver.atoms:dubbo-container-api</include>
									<include>com.lovver.atoms:dubbo-container-spring</include>
									<include>com.lovver.atoms:dubbo-container-jetty</include>
									<include>com.lovver.atoms:dubbo-container-log4j</include>
									<include>com.lovver.atoms:dubbo-container-logback</include>
									 -->
								</includes>
							</artifactSet>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/extension/com.lovver.atoms.serializer.Serializer</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/extension/com.lovver.atoms.cache.CacheProvider</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/extension/com.lovver.atoms.broadcast.BroadCast</resource>
								</transformer>
								<!-- 
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.common.extension.ExtensionFactory</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.common.serialize.Serialization</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.common.status.StatusChecker</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.common.threadpool.ThreadPool</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.remoting.Dispatcher</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.remoting.Codec2</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.remoting.Transporter</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.remoting.exchange.Exchanger</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.remoting.http.HttpBinder</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.remoting.p2p.Networker</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.remoting.telnet.TelnetHandler</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.rpc.Protocol</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.rpc.Filter</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.rpc.InvokerListener</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.rpc.ExporterListener</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.rpc.ProxyFactory</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.rpc.cluster.Cluster</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.rpc.cluster.LoadBalance</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.rpc.cluster.Merger</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.rpc.cluster.RouterFactory</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.container.Container</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.container.page.PageHandler</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.monitor.MonitorFactory</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.registry.RegistryFactory</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.validation.Validation</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.cache.CacheFactory</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.common.store.DataStore</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/dubbo/internal/com.alibaba.dubbo.common.logger.LoggerAdapter</resource>
								</transformer>
								 -->
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
  </build>
  <dependencies>
  	<dependency>
  		<groupId>com.lovver.atoms</groupId>
  		<artifactId>atoms-broadcast-api</artifactId>
  		<version>1.0.0-SNAPSHOT</version>
  	</dependency>
  	<dependency>
  		<groupId>com.lovver.atoms</groupId>
  		<artifactId>atoms-broadcast-redis</artifactId>
  		<version>1.0.0-SNAPSHOT</version>
  	</dependency>
  	<dependency>
  		<groupId>com.lovver.atoms</groupId>
  		<artifactId>atoms-common</artifactId>
  		<version>1.0.0-SNAPSHOT</version>
  	</dependency>
  	<dependency>
  		<groupId>com.lovver.atoms</groupId>
  		<artifactId>atoms-config</artifactId>
  		<version>1.0.0-SNAPSHOT</version>
  	</dependency>
  	<dependency>
  		<groupId>com.lovver.atoms</groupId>
  		<artifactId>atoms-serializer-api</artifactId>
  		<version>1.0.0-SNAPSHOT</version>
  	</dependency>
  	<dependency>
  		<groupId>com.lovver.atoms</groupId>
  		<artifactId>atoms-serializer-fst</artifactId>
  		<version>1.0.0-SNAPSHOT</version>
  	</dependency>
  	<dependency>
  		<groupId>com.lovver.atoms</groupId>
  		<artifactId>atoms-serializer-java</artifactId>
  		<version>1.0.0-SNAPSHOT</version>
  	</dependency>
  	<dependency>
  		<groupId>com.lovver.atoms</groupId>
  		<artifactId>atoms-serializer-kryo</artifactId>
  		<version>1.0.0-SNAPSHOT</version>
  	</dependency>
  	<dependency>
  		<groupId>com.lovver.atoms</groupId>
  		<artifactId>atoms-serializer-kryopool</artifactId>
  		<version>1.0.0-SNAPSHOT</version>
  	</dependency>
  	<dependency>
  		<groupId>com.lovver.atoms</groupId>
  		<artifactId>atoms-cache-api</artifactId>
  		<version>1.0.0-SNAPSHOT</version>
  	</dependency>
  	<dependency>
  		<groupId>com.lovver.atoms</groupId>
  		<artifactId>atoms-cache-ehcache</artifactId>
  		<version>1.0.0-SNAPSHOT</version>
  	</dependency>
  	<dependency>
  		<groupId>com.lovver.atoms</groupId>
  		<artifactId>atoms-cache-redis</artifactId>
  		<version>1.0.0-SNAPSHOT</version>
  	</dependency>
  	<dependency>
  		<groupId>com.lovver.atoms</groupId>
  		<artifactId>atoms-context</artifactId>
  		<version>1.0.0-SNAPSHOT</version>
  	</dependency>
  	<dependency>
  		<groupId>com.lovver.atoms</groupId>
  		<artifactId>atoms-core</artifactId>
  		<version>1.0.0-SNAPSHOT</version>
  	</dependency>
  </dependencies>
</project>